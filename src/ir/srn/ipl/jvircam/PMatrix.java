/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ir.srn.ipl.jvircam;

import javax.swing.JSpinner;
import javax.vecmath.Matrix4d;

/**
 *
 * @author sr
 */
public class PMatrix extends javax.swing.JFrame {

    private Projection projection;
    private ImagePanel imagePanel;

    /**
     * Creates new form PMatrix
     */
    public PMatrix(Projection projection, ImagePanel imagePanel) {
        initComponents();
        this.projection = projection;
        this.imagePanel = imagePanel;
    }

    public void setMatrix(Matrix4d p) {
        this.spinner11.setValue(p.m00);
        this.spinner12.setValue(p.m01);
        this.spinner13.setValue(p.m02);
        this.spinner14.setValue(p.m03);
        //
        this.spinner21.setValue(p.m10);
        this.spinner22.setValue(p.m11);
        this.spinner23.setValue(p.m12);
        this.spinner24.setValue(p.m13);
        //
        this.spinner31.setValue(p.m20);
        this.spinner32.setValue(p.m21);
        this.spinner33.setValue(p.m22);
        this.spinner34.setValue(p.m23);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spinner33 = new javax.swing.JSpinner();
        spinner11 = new javax.swing.JSpinner();
        spinner31 = new javax.swing.JSpinner();
        spinner12 = new javax.swing.JSpinner();
        spinner32 = new javax.swing.JSpinner();
        spinner13 = new javax.swing.JSpinner();
        spinner21 = new javax.swing.JSpinner();
        spinner22 = new javax.swing.JSpinner();
        spinner23 = new javax.swing.JSpinner();
        spinner14 = new javax.swing.JSpinner();
        spinner24 = new javax.swing.JSpinner();
        spinner34 = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("P Matrix");

        spinner33.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner33StateChanged(evt);
            }
        });

        spinner11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner11StateChanged(evt);
            }
        });

        spinner31.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner31StateChanged(evt);
            }
        });

        spinner12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner12StateChanged(evt);
            }
        });

        spinner32.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner32StateChanged(evt);
            }
        });

        spinner13.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner13StateChanged(evt);
            }
        });

        spinner21.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner21StateChanged(evt);
            }
        });

        spinner22.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner22StateChanged(evt);
            }
        });

        spinner23.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner23StateChanged(evt);
            }
        });

        spinner14.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner14StateChanged(evt);
            }
        });

        spinner24.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner24StateChanged(evt);
            }
        });

        spinner34.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner34StateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinner11, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(spinner21)
                    .addComponent(spinner31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinner12, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(spinner22)
                    .addComponent(spinner32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinner13, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(spinner23)
                    .addComponent(spinner33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinner14, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(spinner24)
                    .addComponent(spinner34))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinner11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinner21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinner31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spinner11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner11StateChanged
        Matrix4d p = projection.getP();
        p.m00 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner11StateChanged

    private void spinner12StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner12StateChanged
        Matrix4d p = projection.getP();
        p.m01 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner12StateChanged

    private void spinner13StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner13StateChanged
        Matrix4d p = projection.getP();
        p.m02 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner13StateChanged

    private void spinner14StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner14StateChanged
        Matrix4d p = projection.getP();
        p.m03 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner14StateChanged

    private void spinner21StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner21StateChanged
        Matrix4d p = projection.getP();
        p.m10 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner21StateChanged

    private void spinner22StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner22StateChanged
        Matrix4d p = projection.getP();
        p.m11 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner22StateChanged

    private void spinner23StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner23StateChanged
        Matrix4d p = projection.getP();
        p.m12 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner23StateChanged

    private void spinner24StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner24StateChanged
        Matrix4d p = projection.getP();
        p.m13 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner24StateChanged

    private void spinner31StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner31StateChanged
        Matrix4d p = projection.getP();
        p.m20 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner31StateChanged

    private void spinner32StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner32StateChanged
        Matrix4d p = projection.getP();
        p.m21 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner32StateChanged

    private void spinner33StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner33StateChanged
        Matrix4d p = projection.getP();
        p.m22 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner33StateChanged

    private void spinner34StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner34StateChanged
        Matrix4d p = projection.getP();
        p.m23 = ((Double.parseDouble(((JSpinner) evt.getSource()).getModel().getValue().toString())));
        projection.setP(p);
        imagePanel.repaint();
    }//GEN-LAST:event_spinner34StateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner spinner11;
    private javax.swing.JSpinner spinner12;
    private javax.swing.JSpinner spinner13;
    private javax.swing.JSpinner spinner14;
    private javax.swing.JSpinner spinner21;
    private javax.swing.JSpinner spinner22;
    private javax.swing.JSpinner spinner23;
    private javax.swing.JSpinner spinner24;
    private javax.swing.JSpinner spinner31;
    private javax.swing.JSpinner spinner32;
    private javax.swing.JSpinner spinner33;
    private javax.swing.JSpinner spinner34;
    // End of variables declaration//GEN-END:variables
}
