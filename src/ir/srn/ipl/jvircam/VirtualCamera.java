/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ir.srn.ipl.jvircam;

import java.awt.event.ItemEvent;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.vecmath.Vector3d;

/**
 *
 * @author sr
 */
public final class VirtualCamera extends javax.swing.JFrame {

    private Camera camera = null;
    private boolean topViewClickOnCamera = false;
    private boolean sideViewClickOnCamera = false;
    private KMatrix kMatrix;
    private PMatrix pMatrix;
    private static LogFrame logFrame;

    public static LogFrame logFrame() {
        if (logFrame == null) {
            logFrame = new LogFrame();
            logFrame.setVisible(true);
        }
        return logFrame;
    }

    /**
     * Creates new form VirtualCamera
     */
    public VirtualCamera() {
        initComponents();
        camera = new Camera();
        camera.setResolution(imagePanel.getWidth(), imagePanel.getHeight());
        camera.panTilt(-Math.PI / 12, -Math.PI / 12);
        camera.getPosition().x = -55;
        camera.getPosition().y = 15;
        camera.getPosition().z = 15;
        camera.setFocalLength(20);
        Projection prj = camera.getProjection();

        kMatrix = new KMatrix(prj, (ImagePanel) imagePanel);
        kMatrix.setVisible(true);
        pMatrix = new PMatrix(prj, (ImagePanel) imagePanel);
        pMatrix.setVisible(true);

        ((ImagePanel) imagePanel).setProjection(prj);
        ((TopViewPanel) topViewPanel).setCamera(camera);
        ((SideViewPanel) sideViewPanel).setCamera(camera);
        textFieldX.setInputVerifier(new TextFieldVerifier(-50, -1000, 1000));
        textFieldY.setInputVerifier(new TextFieldVerifier(0, -1000, 1000));
        textFieldZ.setInputVerifier(new TextFieldVerifier(0, -1000, 1000));
        textFieldPan.setInputVerifier(new TextFieldVerifier(0, -180, 180));
        textFieldTilt.setInputVerifier(new TextFieldVerifier(0, -90, 90));
        textFieldZoom.setInputVerifier(new TextFieldVerifier(20, 0.1, 1000));
        textFieldScaleTop.setInputVerifier(new TextFieldVerifier(1.0, 0.05, 100));
        textFieldScaleSide.setInputVerifier(new TextFieldVerifier(1.0, 0.05, 100));
        this.refreshStatus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel = new ImagePanel();
        topViewPanel = new TopViewPanel();
        sideViewPanel = new SideViewPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textFieldZ = new javax.swing.JTextField();
        textFieldX = new javax.swing.JTextField();
        textFieldY = new javax.swing.JTextField();
        textFieldPan = new javax.swing.JTextField();
        textFieldTilt = new javax.swing.JTextField();
        textFieldZoom = new javax.swing.JTextField();
        textFieldScaleTop = new javax.swing.JTextField();
        textFieldScaleSide = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        checkBoxVanishXYZ = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        checkBoxVanishSpherical = new javax.swing.JCheckBox();
        checkBoxVanishCubic = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Virtual Camera");

        imagePanel.setBackground(new java.awt.Color(0, 0, 0));
        imagePanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                imagePanelMouseWheelMoved(evt);
            }
        });
        imagePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                imagePanelComponentResized(evt);
            }
        });

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 882, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );

        topViewPanel.setBackground(new java.awt.Color(0, 0, 0));
        topViewPanel.setPreferredSize(new java.awt.Dimension(300, 300));
        topViewPanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                topViewPanelMouseWheelMoved(evt);
            }
        });
        topViewPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                topViewPanelMousePressed(evt);
            }
        });
        topViewPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                topViewPanelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout topViewPanelLayout = new javax.swing.GroupLayout(topViewPanel);
        topViewPanel.setLayout(topViewPanelLayout);
        topViewPanelLayout.setHorizontalGroup(
            topViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        topViewPanelLayout.setVerticalGroup(
            topViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        sideViewPanel.setBackground(new java.awt.Color(0, 0, 0));
        sideViewPanel.setPreferredSize(new java.awt.Dimension(300, 300));
        sideViewPanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                sideViewPanelMouseWheelMoved(evt);
            }
        });
        sideViewPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sideViewPanelMousePressed(evt);
            }
        });
        sideViewPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                sideViewPanelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout sideViewPanelLayout = new javax.swing.GroupLayout(sideViewPanel);
        sideViewPanel.setLayout(sideViewPanelLayout);
        sideViewPanelLayout.setHorizontalGroup(
            sideViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        sideViewPanelLayout.setVerticalGroup(
            sideViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        jLabel1.setText("Top View:");

        jLabel2.setText("Side View:");

        jLabel4.setText("Z:");

        jLabel5.setText("Y:");

        jLabel6.setText("X:");

        jLabel7.setText("Pan:");

        jLabel8.setText("Tilt:");

        jLabel9.setText("Zoom:");

        textFieldZ.setText("0");
        textFieldZ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldZFocusLost(evt);
            }
        });

        textFieldX.setText("0");
        textFieldX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldXFocusLost(evt);
            }
        });

        textFieldY.setText("0");
        textFieldY.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldYFocusLost(evt);
            }
        });

        textFieldPan.setText("0");
        textFieldPan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldPanFocusLost(evt);
            }
        });

        textFieldTilt.setText("0");
        textFieldTilt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldTiltFocusLost(evt);
            }
        });

        textFieldZoom.setText("10");
        textFieldZoom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldZoomFocusLost(evt);
            }
        });

        textFieldScaleTop.setText("1.0");
        textFieldScaleTop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldScaleTopFocusLost(evt);
            }
        });

        textFieldScaleSide.setText("1.0");
        textFieldScaleSide.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldScaleSideFocusLost(evt);
            }
        });

        jLabel3.setText("Scale:");

        jLabel10.setText("Scale:");

        checkBoxVanishXYZ.setText("XYZ");
        checkBoxVanishXYZ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxVanishXYZItemStateChanged(evt);
            }
        });

        jLabel11.setText("Vanishing points:");

        checkBoxVanishSpherical.setText("Spherical");
        checkBoxVanishSpherical.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxVanishSphericalItemStateChanged(evt);
            }
        });

        checkBoxVanishCubic.setText("Cubic");
        checkBoxVanishCubic.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxVanishCubicItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sideViewPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(topViewPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textFieldPan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(textFieldTilt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(textFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textFieldZoom, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textFieldZ, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldScaleTop, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldScaleSide, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBoxVanishXYZ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBoxVanishSpherical)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkBoxVanishCubic)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textFieldScaleTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(topViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(textFieldScaleSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sideViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(textFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(textFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(textFieldTilt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldZoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkBoxVanishXYZ)
                            .addComponent(jLabel11)
                            .addComponent(checkBoxVanishSpherical)
                            .addComponent(checkBoxVanishCubic))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imagePanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_imagePanelMouseWheelMoved
        double val = evt.getPreciseWheelRotation();
        if (camera.getFocalLength() > 0.1 || val < 0) {
            camera.addFocalLength(-val / 10);
            this.refreshStatus();
        }
    }//GEN-LAST:event_imagePanelMouseWheelMoved

    private void topViewPanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_topViewPanelMouseWheelMoved
        double val = evt.getPreciseWheelRotation();
        ((TopViewPanel) topViewPanel).addScale(-val / 10);
        textFieldScaleTop.setText(String.format("%.2f", ((TopViewPanel) topViewPanel).getScale()));
        topViewPanel.repaint();
    }//GEN-LAST:event_topViewPanelMouseWheelMoved

    private void sideViewPanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_sideViewPanelMouseWheelMoved
        double val = evt.getPreciseWheelRotation();
        ((SideViewPanel) sideViewPanel).addScale(-val / 10);
        textFieldScaleSide.setText(String.format("%.2f", ((SideViewPanel) sideViewPanel).getScale()));
        sideViewPanel.repaint();
    }//GEN-LAST:event_sideViewPanelMouseWheelMoved

    private void topViewPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topViewPanelMouseDragged
        if (SwingUtilities.isLeftMouseButton(evt) && this.topViewClickOnCamera == true) {
            ((TopViewPanel) topViewPanel).setCameraLocation(evt.getPoint());
        } else if (SwingUtilities.isRightMouseButton(evt)) {
            ((TopViewPanel) topViewPanel).setCameraPan(evt.getPoint());
        }
        this.refreshStatus();
    }//GEN-LAST:event_topViewPanelMouseDragged

    private void sideViewPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sideViewPanelMouseDragged
        if (SwingUtilities.isLeftMouseButton(evt) && this.sideViewClickOnCamera == true) {
            ((SideViewPanel) sideViewPanel).setCameraLocation(evt.getPoint());
        } else if (SwingUtilities.isRightMouseButton(evt)) {
            ((SideViewPanel) sideViewPanel).setCameraTilt(evt.getPoint());
        }
        this.refreshStatus();
    }//GEN-LAST:event_sideViewPanelMouseDragged

    private void topViewPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topViewPanelMousePressed
        if (((TopViewPanel) topViewPanel).isOverCamera(evt.getPoint())) {
            this.topViewClickOnCamera = true;
        } else {
            this.topViewClickOnCamera = false;
        }
    }//GEN-LAST:event_topViewPanelMousePressed

    private void sideViewPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sideViewPanelMousePressed
        if (((SideViewPanel) sideViewPanel).isOverCamera(evt.getPoint())) {
            this.sideViewClickOnCamera = true;
        } else {
            this.sideViewClickOnCamera = false;
        }
    }//GEN-LAST:event_sideViewPanelMousePressed

    private void textFieldXFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldXFocusLost
        this.updateStatus();
    }//GEN-LAST:event_textFieldXFocusLost

    private void textFieldYFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldYFocusLost
        this.updateStatus();
    }//GEN-LAST:event_textFieldYFocusLost

    private void textFieldZFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldZFocusLost
        this.updateStatus();
    }//GEN-LAST:event_textFieldZFocusLost

    private void textFieldPanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldPanFocusLost
        this.updateStatus();
    }//GEN-LAST:event_textFieldPanFocusLost

    private void textFieldTiltFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldTiltFocusLost
        this.updateStatus();
    }//GEN-LAST:event_textFieldTiltFocusLost

    private void textFieldZoomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldZoomFocusLost
        this.updateStatus();
    }//GEN-LAST:event_textFieldZoomFocusLost

    private void imagePanelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_imagePanelComponentResized
        camera.setResolution(imagePanel.getWidth(), imagePanel.getHeight());
        this.refreshStatus();
        imagePanel.repaint();
        //this.refreshStatus();
    }//GEN-LAST:event_imagePanelComponentResized

    private void textFieldScaleTopFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldScaleTopFocusLost
        double scale = Double.parseDouble(textFieldScaleTop.getText());
        ((TopViewPanel) topViewPanel).setScale(scale);
        topViewPanel.repaint();
    }//GEN-LAST:event_textFieldScaleTopFocusLost

    private void textFieldScaleSideFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldScaleSideFocusLost
        double scale = Double.parseDouble(textFieldScaleSide.getText());
        ((SideViewPanel) sideViewPanel).setScale(scale);
        sideViewPanel.repaint();
    }//GEN-LAST:event_textFieldScaleSideFocusLost

    private void checkBoxVanishXYZItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxVanishXYZItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ((ImagePanel) imagePanel).getVanish()[0] = true;
            imagePanel.repaint();
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            ((ImagePanel) imagePanel).getVanish()[0] = false;
            imagePanel.repaint();
        }
    }//GEN-LAST:event_checkBoxVanishXYZItemStateChanged

    private void checkBoxVanishSphericalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxVanishSphericalItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ((ImagePanel) imagePanel).getVanish()[1] = true;
            imagePanel.repaint();
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            ((ImagePanel) imagePanel).getVanish()[1] = false;
            imagePanel.repaint();
        }
    }//GEN-LAST:event_checkBoxVanishSphericalItemStateChanged

    private void checkBoxVanishCubicItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxVanishCubicItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            ((ImagePanel) imagePanel).getVanish()[2] = true;
            imagePanel.repaint();
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            ((ImagePanel) imagePanel).getVanish()[2] = false;
            imagePanel.repaint();
        }
    }//GEN-LAST:event_checkBoxVanishCubicItemStateChanged

    public void refreshStatus() {
        textFieldX.setText(String.format("%.1f", camera.getPosition().x));
        textFieldY.setText(String.format("%.1f", camera.getPosition().y));
        textFieldZ.setText(String.format("%.1f", camera.getPosition().z));
        textFieldPan.setText(String.format("%d", (int) Math.toDegrees(camera.getPanAngle())));
        textFieldTilt.setText(String.format("%d", (int) Math.toDegrees(camera.getTiltAngle())));
        textFieldZoom.setText(String.format("%.1f", camera.getFocalLength()));
        Projection prj = camera.getProjection();
        kMatrix.setMatrix(prj.getK());
        pMatrix.setMatrix(prj.getP());
        imagePanel.repaint();
        topViewPanel.repaint();
        sideViewPanel.repaint();
    }

    public void updateStatus() {
        double x = Double.parseDouble(textFieldX.getText());
        double y = Double.parseDouble(textFieldY.getText());
        double z = Double.parseDouble(textFieldZ.getText());
        double pan = Math.toRadians(Double.parseDouble(textFieldPan.getText()));
        double tilt = Math.toRadians(Double.parseDouble(textFieldTilt.getText()));
        double zoom = Double.parseDouble(textFieldZoom.getText());
        camera.setPosition(new Vector3d(x, y, z));
        camera.panTilt(pan, tilt);
        camera.setFocalLength(zoom);
        this.refreshStatus();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {// Nimbus
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VirtualCamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VirtualCamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VirtualCamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VirtualCamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VirtualCamera().setVisible(true);
            }
        });
    }

    private class TextFieldVerifier extends InputVerifier {

        private double min = Double.NEGATIVE_INFINITY;
        private double max = Double.POSITIVE_INFINITY;
        private double init;

        public TextFieldVerifier(double init) {
            this.init = init;
        }

        public TextFieldVerifier(double init, double min, double max) {
            this.min = min;
            this.max = max;
            this.init = init;
        }

        @Override
        public boolean verify(JComponent input) {
            if (input instanceof JTextField) {
                JTextField tf = (JTextField) input;
                try {
                    double val = Double.parseDouble(tf.getText());
                    if (val < min) {
                        tf.setText(Double.toString(min));
                    } else if (val > max) {
                        tf.setText(Double.toString(max));
                    }
                } catch (Exception ex) {
                    tf.setText(Double.toString(init));
                }
            }
            return true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxVanishCubic;
    private javax.swing.JCheckBox checkBoxVanishSpherical;
    private javax.swing.JCheckBox checkBoxVanishXYZ;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel sideViewPanel;
    private javax.swing.JTextField textFieldPan;
    private javax.swing.JTextField textFieldScaleSide;
    private javax.swing.JTextField textFieldScaleTop;
    private javax.swing.JTextField textFieldTilt;
    private javax.swing.JTextField textFieldX;
    private javax.swing.JTextField textFieldY;
    private javax.swing.JTextField textFieldZ;
    private javax.swing.JTextField textFieldZoom;
    private javax.swing.JPanel topViewPanel;
    // End of variables declaration//GEN-END:variables
}
